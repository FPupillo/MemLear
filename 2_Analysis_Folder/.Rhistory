date()
#------------------------------------------------------------------------------#
# Check the answers
#
#"Sat Dec 18 12:19:50 2021"
#------------------------------------------------------------------------------#
# source the functions
source("helper_functions/cleanData.R")
getwd()
setwd("/home/francesco/PowerFolders/MemLear/2_Analysis_Folder/")
#------------------------------------------------------------------------------#
# Check the answers
#
#"Sat Dec 18 12:19:50 2021"
#------------------------------------------------------------------------------#
# source the functions
source("helper_functions/cleanData.R")
cleanData(c(11, 12))
list.files()
cleanData(c("11", "12"))
getwd()
ID<-11
paste0("clean_data/sub-", ID)
# create the folder for the participants' data
dir.create(paste0("clean_data/sub-", ID), showWarnings = FALSE)
#subject path
subpath<-paste0(cd, "clean_data/sub-", ID)
# set to raw data
cd<-getwd()
#subject path
subpath<-paste0(cd, "clean_data/sub-", ID)
setwd("raw_data")
# select participants' file
files<-list.files(pattern = c("^".*.csv$"))
for (f in files){
# if this is the first part
if (grep(pattern="ses-01_part-01", x = f)==1){
} else if (grep(pattern="nBack", x=f)==1){
file<-read.csv(f)
VoI<-c("participant", "Expra.Code", "key_resp_4.keys", "key_resp_4.corr" ,
"key_resp_4.rt" , "word", "CORRanswer","trialtype","hit_NoHit" )
file<- select(file,all_of(VoI ))
# delete first rows
file<-filter(file, !is.na(key_resp_4.corr))
# print the files
setwd(cd)
write.csv(file, paste0(subpath,"/", ID, "_nBack.csv"))
} else if (grep(pattern="phase2", x=f)==1){
file<-read.csv(f)
VoI<-c("participant", "Expra.Code","recog_resp.keys","recog_resp.rt", "conf_resp.keys","conf_resp.rt",
"images", "type","corr_ans")
file<- select(file,all_of(VoI ))
# exclude the NA
file<-filter(file, !is.na(recog_resp.rt))
# print the files
setwd(cd)
write.csv(file, paste0(subpath,"/", ID, "_recog.csv"))
}
}
setwd(cd)
}
# select participants' file
files<-list.files(pattern = c(".csv$"))
# select participants' file
files<-list.files(pattern = paste0("^", ID,  ".*.csv$"))
paste0("^", ID,  ".*.csv$"
)
list.files()
setwd("raw_data")
# select participants' file
files<-list.files(pattern = paste0("^", ID,  ".*.csv$"))
# select participants' file
files<-list.files(pattern = paste0("^", ID,  ".*.csv$"))
setwd("raw_data")
# select participants' file
files<-list.files(pattern = paste0("^", ID,  ".*.csv$"))
files
# select participants' file
files<-list.files(pattern = paste0("^", ID,  ".*.csv$"))
for (f in files){
# if this is the first part
if (grep(pattern="ses-01_part-01", x = f)==1){
} else if (grep(pattern="nBack", x=f)==1){
file<-read.csv(f)
VoI<-c("participant", "Expra.Code", "key_resp_4.keys", "key_resp_4.corr" ,
"key_resp_4.rt" , "word", "CORRanswer","trialtype","hit_NoHit" )
file<- select(file,all_of(VoI ))
# delete first rows
file<-filter(file, !is.na(key_resp_4.corr))
# print the files
setwd(cd)
write.csv(file, paste0(subpath,"/", ID, "_nBack.csv"))
} else if (grep(pattern="phase2", x=f)==1){
file<-read.csv(f)
VoI<-c("participant", "Expra.Code","recog_resp.keys","recog_resp.rt", "conf_resp.keys","conf_resp.rt",
"images", "type","corr_ans")
file<- select(file,all_of(VoI ))
# exclude the NA
file<-filter(file, !is.na(recog_resp.rt))
# print the files
setwd(cd)
write.csv(file, paste0(subpath,"/", ID, "_recog.csv"))
}
}
(grep(pattern="ses-01_part-01", x = f)==1)
file<-read.csv(f)
(grep(pattern="ses-01_part-01", x = f)==1)
View(file)
names(file)
file<- select(file,all_of(VoI ))
#----------------------------------------------------------------------------#
# function that cleans the data
#   INPUT:
#           ID: participant
#   OUTPUT: - dataframe withonly the variable of interest selected
#             printed in the output folder
#----------------------------------------------------------------------------#
# it requries dplyr
library(dplyr)
file<- select(file,all_of(VoI ))
VoI<- c("participant","Expra.Code" ,"pract_resp.keys","pract_resp.corr",
"pract_resp.rt","myownaccuracyCORR","character" , "left_categ"  ,
"centleft_categ", "centright_categ",
"right_categ" ,"trial_cond"    ,
"corr_ans" , "corr_ans_num"   ,
"type" , "img"  ,"task_response.keys"      ,
"task_response.corr" ,   "task_response.rt"           )
file<- select(file,all_of(VoI ))
View(file)
# delete first rows
file<-filter(file, !is.na(key_resp_4.corr))
# del;ete first rows
file<-filter(file, !is.na(character))
View(file)
# del;ete first rows
file<-filter(file, !is.na(left_categ))
# del;ete first rows
file<-dplyr::filter(file, !is.na(left_categ))
View(file)
# del;ete first rows
file<-dplyr::filter(file, !is.na(trial_cond))
View(file)
file<-read.csv(f)
VoI<- c("participant","Expra.Code" ,"pract_resp.keys","pract_resp.corr",
"pract_resp.rt","myownaccuracyCORR","character" , "left_categ"  ,
"centleft_categ", "centright_categ",
"right_categ" ,"trial_cond"    ,
"corr_ans" , "corr_ans_num"   ,
"type" , "img"  ,"task_response.keys"      ,
"task_response.corr" ,   "task_response.rt"           )
file<- select(file,all_of(VoI ))
View(file)
# del;ete first rows
file<-dplyr::filter(file, !is.na(img))
VoI<- c("participant","Expra.Code" ,"pract_resp.keys","pract_resp.corr",
"pract_resp.rt","myownaccuracyCORR","character" , "left_categ"  ,
"centleft_categ", "centright_categ",
"right_categ" ,"trial_cond"    ,
"corr_ans" , "corr_ans_num"   ,
"type" , "img"  ,"task_response.keys"      ,
"task_response.corr" ,   "task_response.rt"     , "condition"      )
file<- select(file,all_of(VoI ))
file<-read.csv(f)
VoI<- c("participant","Expra.Code" ,"pract_resp.keys","pract_resp.corr",
"pract_resp.rt","myownaccuracyCORR","character" , "left_categ"  ,
"centleft_categ", "centright_categ",
"right_categ" ,"trial_cond"    ,
"corr_ans" , "corr_ans_num"   ,
"type" , "img"  ,"task_response.keys"      ,
"task_response.corr" ,   "task_response.rt"     , "condition"      )
file<- select(file,all_of(VoI ))
# del;ete first rows
file<-dplyr::filter(file, !is.na(corr_ans))
str(file$corr_ans)
# del;ete first rows
file<-dplyr::filter(file, !is.na(as.character(corr_ans)))
as.character(file$corr_ans)
nchar(file$character)
nchar(as.character(file$character))
# del;ete first rows
file<-dplyr::filter(nchar(as.character(character))==0)
# del;ete first rows
file<-dplyr::filter(file, != nchar(as.character(character))==0)
# del;ete first rows
file<-dplyr::filter(file, nchar(as.character(character))>0)
View(file)
# print the files
setwd(cd)
write.csv(file, paste0(subpath,"/", ID, "_encoding.csv"))
subpath
#subject path
subpath<-paste0(cd, "/clean_data/sub-", ID)
write.csv(file, paste0(subpath,"/", ID, "_encoding.csv"))
# delete first rows
cleanData(c(11, 12))
source("~/PowerFolders/MemLear/2_Analysis_Folder/helper_functions/cleanData.R", echo=TRUE)
# delete first rows
cleanData(c(11, 12))
# delete first rows
cleanData(c(11))
# delete first rows
cleanData(c(12))
# delete first rows
cleanData(c(11))
#------------------------------------------------------------------------------#
# Check the answers
#
#"Sat Dec 18 12:19:50 2021"
#------------------------------------------------------------------------------#
rm(list=ls())
# source the functions
source("helper_functions/cleanData.R")
# delete first rows
cleanData(c(11))
participant<-11
# retrieve the file
file<-read.csv(paste0("clean_data/sub-", participant, "/", participant, "_encoding.csv")
# retrieve the file
file<-read.csv(paste0("clean_data/sub-", participant, "/", participant, "_encoding.csv"))
names()
names(file)
source("~/PowerFolders/MemLear/2_Analysis_Folder/helper_functions/cleanData.R", echo=TRUE)
# delete first rows
cleanData(c(participant))
# retrieve the file
file<-read.csv(paste0("clean_data/sub-", participant, "/", participant, "_encoding.csv"))
names(file)
11%%4
12%%4
552%%4
participant<-12
# delete first rows
cleanData(c(participant))
# retrieve the file
file<-read.csv(paste0("clean_data/sub-", participant, "/", participant, "_encoding.csv"))
names(file)
library(dplyr)
View(file)
# select the practice trial
practice<-filter(file, !is.na(type))
# select the practice trial
practice<-filter(file, !is.na(trial_cond))
names(practice)
# compute the response made by participants
resp_cat<-practice[,8:11][,corr_ans_num]
# compute the response made by participants
resp_cat<-practice[,8:11][,practice$corr_ans_num]
resp_cat
# compute the response made by participants
practice$resp_cat<-practice[,8:11][,practice$corr_ans_num]
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
# compute the response made by participants
practice$resp_cat<-practice[,8:11][,practice$corr_ans_num]
class(practice$resp_cat)
n<-=1
n<-1
practice[n,8:11][,practice$corr_ans_num[n]]
practice$resp_cat[n]<-practice[n,8:11][,practice$corr_ans_num[n]]
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
# compute the response made by participants
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-practice[n,8:11][,practice$corr_ans_num[n]]
}
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
# compute the response made by participants
practice$resp_cat<-NA
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-practice[n,8:11][,practice$corr_ans_num[n]]
}
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
practice$resp_cat
practice[n,8:11][,practice$corr_ans_num[n]]
practice[n,8:11][,practice$corr_ans_num[n]]
# compute the response made by participants
practice$resp_cat<-NA
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-as.character(practice[n,8:11][,practice$corr_ans_num[n]])
}
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat",
"task_response.corr"
)
practice<-practice[, VoI]
practice$task_response.corr
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp_keys", "resp_cat"
)
practice<-practice[, VoI]
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp.keys", "resp_cat"
)
practice<-practice[, VoI]
?cummean
x <- c(1, 3, 5, 2, 2)
cummean(x)
mean(x)
cumsum(x) / seq_along(x)
names)file
names(file)
# select the practice trial
practice<-filter(file, !is.na(trial_cond))
# compute the response made by participants
practice$resp_cat<-NA
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-as.character(practice[n,8:11][,practice$corr_ans_num[n]])
}
# get cumulative accuracy
practice$cumAcc<- cumsum(practice$pract_resp.corr) / seq_along(practice$pract_resp.corr)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp.keys", "resp_cat",
"pract_response.corr", "cumAcc"
)
practice<-practice[, VoI]
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp.keys", "resp_cat",
"pract_resp.corr", "cumAcc"
)
practice<-practice[, VoI]
View(practice)
# compute the response made by participants
practice$resp_cat<-NA
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-as.character(practice[n,8:11][,practice$pract_resp.keys[n]])
}
# get cumulative accuracy
practice$cumAcc<- cumsum(practice$pract_resp.corr) / seq_along(practice$pract_resp.corr)
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp.keys", "resp_cat",
"pract_resp.corr", "cumAcc"
)
practice<-practice[, VoI]
# retrieve the file
file<-read.csv(paste0("clean_data/sub-", participant, "/", participant, "_encoding.csv"))
names(file)
# select the practice trial
practice<-filter(file, !is.na(trial_cond))
# compute the response made by participants
practice$resp_cat<-NA
for (n in 1:nrow(practice)){
practice$resp_cat[n]<-as.character(practice[n,8:11][,practice$pract_resp.keys[n]])
}
# get cumulative accuracy
practice$cumAcc<- cumsum(practice$pract_resp.corr) / seq_along(practice$pract_resp.corr)
names(practice)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "pract_resp.keys", "resp_cat",
"pract_resp.corr", "cumAcc"
)
practice<-practice[, VoI]
write.csv(paste0("check_practice_participant_", participant. ".csv"))
write.csv(paste0("check_practice_participant_", participant, ".csv"))
write.csv(paste0("check_practice_participant_", participant, ".csv"), row.names = F)
write.csv(practice,paste0("check_practice_participant_", participant, ".csv"), row.names = F)
# select the main task trial
practice<-filter(file, !is.na(type))
View(file)
# select the main task trial
task<-filter(file, !is.na(task_resp.keys))
# select the main task trial
task<-filter(file, !is.na(task_response.keys))
View(file)
# select the main task trial
task<-filter(file, !is.na(task_response.corr))
# compute the response made by participants
task$resp_cat<-NA
for (n in 1:nrow(task)){
task$resp_cat[n]<-as.character(task[n,8:11][,task$pract_resp.keys[n]])
}
# compute the response made by participants
task$resp_cat<-NA
for (n in 1:nrow(task)){
task$resp_cat[n]<-as.character(task[n,8:11][,task$task_response.keys[n]])
}
task[n, 8:11]
task[9, 8:11]
# compute the response made by participants
task$resp_cat<-NA
for (n in 1:nrow(task)){
if (!=is.na(task$task_response.keys[n])){
task$resp_cat[n]<-as.character(task[n,8:11][,task$task_response.keys[n]])
}
}
for (n in 1:nrow(task)){
if (!is.na(task$task_response.keys[n])){
task$resp_cat[n]<-as.character(task[n,8:11][,task$task_response.keys[n]])
}
}
# get cumulative accuracy
task$cumAcc<- cumsum(task$task_response.keys) / seq_along(task$task_response.keys)
task$cumAcc
# get cumulative accuracy
task$cumAcc<- cumsum(task$task_response.keys, na.rm=T) / seq_along(task$task_response.keys)
seq_along(task$task_response.keys)
cumsum(task$task_response.keys, na.rm=T)
cumsum(task$task_response.keys)
cumsum( ifelse(is.na(task$task_response.keys), 0,  task$task_response.keys)
)
cumsum( ifelse(is.na(task$task_response.corr), 0,  task$task_response.corr))
t
# get cumulative accuracy
task$cumAcc<- cumsum( ifelse(is.na(task$task_response.corr), 0,  task$task_response.corr)) / seq_along(task$task_response.keys)
task$cumAcc
# get cumulative accuracy
task$cumAcc<- cumsum( ifelse(is.na(task$task_response.corr), 0,  task$task_response.corr)) / seq_along(task$task_response.corr)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "task_response.corr", "resp_cat",
"cumAcc"
)
task<-task[, VoI]
write.csv(task,paste0("check_task_participant_", participant, ".csv"), row.names = F)
# select the main task trial
task<-filter(file, !is.na(task_response.corr))
# compute the response made by participants
task$resp_cat<-NA
for (n in 1:nrow(task)){
if (!is.na(task$task_response.keys[n])){
task$resp_cat[n]<-as.character(task[n,8:11][,task$task_response.keys[n]])
}
}
# get cumulative accuracy
task$cumAcc<- cumsum( ifelse(is.na(task$task_response.corr), 0,  task$task_response.corr)) / seq_along(task$task_response.corr)
names(task)
VoI<-c("trial_cond","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "task_response.keys", "task_response.corr", "resp_cat",
"cumAcc"
)
task<-task[, VoI]
write.csv(task,paste0("check_task_participant_", participant, ".csv"), row.names = F)
# select the main task trial
task<-filter(file, !is.na(task_response.corr))
# compute the response made by participants
task$resp_cat<-NA
for (n in 1:nrow(task)){
if (!is.na(task$task_response.keys[n])){
task$resp_cat[n]<-as.character(task[n,8:11][,task$task_response.keys[n]])
}
}
# get cumulative accuracy
task$cumAcc<- cumsum( ifelse(is.na(task$task_response.corr), 0,  task$task_response.corr)) / seq_along(task$task_response.corr)
names(task)
VoI<-c("type","character", "left_categ", "centleft_categ","centright_categ" ,
"right_categ" ,  "corr_ans", "img", "corr_ans_num", "task_response.keys", "task_response.corr", "resp_cat",
"cumAcc", "condition"
)
task<-task[, VoI]
write.csv(task,paste0("check_task_participant_", participant, ".csv"), row.names = F)
